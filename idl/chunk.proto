syntax = "proto3";

package chunk;

import "api.proto";

option go_package = "chunk";

// ---------------------- Service 定义 ----------------------

service chunk {
  // 文件上传前基本信息处理
  rpc FileUploadPrepare(FileUploadPrepareRequest) returns (FileUploadPrepareReply) {
    option (api.post) = "/file/upload/prepare";
  }

  // 文件分片上传
  rpc FileUploadChunk(FileUploadChunkRequest) returns (FileUploadChunkReply) {
    option (api.post) = "/file/upload/chunk";
  }

  // 文件分片上传完成
  rpc FileUploadChunkComplete(FileUploadChunkCompleteRequest) returns (FileUploadChunkCompleteReply) {
    option (api.post) = "/file/upload/chunk/complete";
  }
}

// ---------------------- Messages 定义 ----------------------

message FileUploadChunkCompleteRequest {
  string md5 = 1;
  string name = 2;
  string ext = 3;
  int64 size = 4;
  string key = 5;
  string upload_id = 6;
  repeated CosObject cos_objects = 7;
}

message CosObject {
  int32 part_number = 1;
  string etag = 2;
}

message FileUploadChunkCompleteReply {
  string identity = 1;
}

message FileUploadChunkRequest {
  string key = 1;
  string upload_id = 2;
  int32 part_number = 3;
}

message FileUploadChunkReply {
  string etag = 1;
}

message FileUploadPrepareRequest {
  string md5 = 1;
  string name = 2;
  string ext = 3;
}

message FileUploadPrepareReply {
  string identity = 1;
  string upload_id = 2;
  string key = 3;
}