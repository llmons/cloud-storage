syntax = "proto3";

import "google/api/annotations.proto";

option go_package = "cloud-storage/api/cloud_storage/v1;v1";

// ---------------------- Service 定义 ----------------------

service file {
  // 文件上传
  rpc FileUpload(FileUploadRequest) returns (FileUploadReply) {
    option (google.api.http) = {
      post: "/file/upload"
      body: "*"
    };
  }

  // 用户文件的关联存储
  rpc UserRepositorySave(UserRepositorySaveRequest) returns (UserRepositorySaveReply) {
    option (google.api.http) = {
      post: "/user/repository/save"
      body: "*"
    };
  }

  // 用户文件列表
  rpc UserFileList(UserFileListRequest) returns (UserFileListReply) {
    option (google.api.http) = {
      post: "/user/file/list"
      body: "*"
    };
  }

  // 用户文件夹列表
  rpc UserFolderList(UserFolderListRequest) returns (UserFolderListReply) {
    option (google.api.http) = {
      post: "/user/folder/list"
      body: "*"
    };
  }

  // 用户文件名称修改
  rpc UserFileNameUpdate(UserFileNameUpdateRequest) returns (UserFileNameUpdateReply) {
    option (google.api.http) = {
      post: "/user/file/name/update"
      body: "*"
    };
  }

  // 用户-文件夹创建
  rpc UserFolderCreate(UserFolderCreateRequest) returns (UserFolderCreateReply) {
    option (google.api.http) = {
      post: "/user/folder/create"
      body: "*"
    };
  }

  // 用户-文件删除
  rpc UserFileDelete(UserFileDeleteRequest) returns (UserFileDeleteReply) {
    option (google.api.http) = {
      delete: "/user/file/delete"
    };
  }

  // 用户-文件移动
  rpc UserFileMove(UserFileMoveRequest) returns (UserFileMoveReply) {
    option (google.api.http) = {
      put: "/user/file/move"
      body: "*"
    };
  }
}

// ---------------------- Messages 定义 ----------------------

message UserFileMoveRequest {
  string identity = 1;
  string parent_identity = 2;
}

message UserFileMoveReply {}

message UserFileDeleteRequest {
  string identity = 1;
}

message UserFileDeleteReply {}

message UserFolderCreateRequest {
  int64 parent_id = 1;
  string name = 2;
}

message UserFolderCreateReply {
  string identity = 1;
}

message UserFileNameUpdateRequest {
  string identity = 1;
  string name = 2;
}

message UserFileNameUpdateReply {}

message UserFileListRequest {
  string identity = 1;
  int32 page = 2;
  int32 size = 3;
}

message UserFileListReply {
  repeated UserFile list = 1;
  int64 count = 2;
}

message UserFile {
  int64 id = 1;
  string identity = 2;
  string repository_identity = 3;
  string name = 4;
  string ext = 5;
  string path = 6;
  int64 size = 7;
}

message UserFolderListRequest {
  string identity = 1;
}

message UserFolderListReply {
  repeated UserFolder list = 1;
}

message UserFolder {
  string identity = 1;
  string name = 2;
}

message UserRepositorySaveRequest {
  int64 parent_id = 1;
  string repository_identity = 2;
  string ext = 3;
  string name = 4;
}

message UserRepositorySaveReply {}

message FileUploadRequest {
  string hash = 1;
  string name = 2;
  string ext = 3;
  int64 size = 4;
  string path = 5;
}

message FileUploadReply {
  string identity = 1;
  string ext = 2;
  string name = 3;
}
